name: SonarCloud C++ Static Analysis with Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake lcov libgtest-dev unzip wget
          pip install gcovr==5.1

      - name: Extract local build-wrapper
        run: unzip tools/build-wrapper-linux-x86.zip

      - name: CMake Configure with Coverage Flags
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_CXX_FLAGS="--coverage" \
            -DCMAKE_C_FLAGS="--coverage"

      - name: Build with build-wrapper
        run: |
          ./build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output \
            cmake --build build

      - name: Run Tests (all *_test)
        run: |
          cd build
          ./dvm_test
          ./sale_test
          ./domain_test
          ./otherdvm_test
          ./controller_test
          ./integration_test
          cd ..

      - name: Run SonarScanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip
          sonar-scanner-5.0.1.3006-linux/bin/sonar-scanner \
            -Dsonar.projectKey=virtuoso108_advancedsw \
            -Dsonar.organization=virtuoso108 \
            -Dsonar.sources=src \
            -Dsonar.cfamily.build-wrapper-output=bw-output \
            -Dsonar.cfamily.gcov.reportsPath=.
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Slack
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"âœ… SonarCloud analysis succeeded for ${{ github.repository }} on `${{ github.ref_name }}`"}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}

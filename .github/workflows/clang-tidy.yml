name: Run Clang-Tidy and Report to Slack

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install clang-tidy
        run: |
          sudo apt update
          sudo apt install clang-tidy -y

      - name: Run clang-tidy and save output
        run: |
          clang-tidy main.cpp -- -std=c++17 2>&1 | tee clang-tidy.log

      - name: Parse clang-tidy output
        id: parse
        run: |
          WARNINGS=$(grep -E 'warning:' clang-tidy.log | wc -l)
          ERRORS=$(grep -E 'error:' clang-tidy.log | wc -l)
          echo "WARNINGS=$WARNINGS" >> $GITHUB_ENV
          echo "ERRORS=$ERRORS" >> $GITHUB_ENV
          echo "::set-output name=warnings::$WARNINGS"
          echo "::set-output name=errors::$ERRORS"

      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "üõ†Ô∏è Clang-Tidy Í≤∞Í≥º Î≥¥Í≥†",
              "attachments": [
                {
                  "color": "${{ steps.parse.outputs.errors != '0' && 'danger' || (steps.parse.outputs.warnings != '0' && 'warning' || 'good') }}",
                  "fields": [
                    {
                      "title": "‚ö†Ô∏è Í≤ΩÍ≥† Ïàò",
                      "value": "${{ steps.parse.outputs.warnings }}",
                      "short": true
                    },
                    {
                      "title": "‚ùå Ïò§Î•ò Ïàò",
                      "value": "${{ steps.parse.outputs.errors }}",
                      "short": true
                    }
                  ],
                  "footer": "Î¶¨Ìè¨ÏßÄÌÜ†Î¶¨: ${{ github.repository }}",
                  "ts": $(date +%s)
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

name: Run Clang-Tidy and Report to Slack

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install clang-tidy
        run: |
          sudo apt update
          sudo apt install clang-tidy -y

      - name: Run clang-tidy and save output
        run: |
          clang-tidy main.cpp -- -std=c++17 2>&1 | tee clang-tidy.log

      - name: Parse clang-tidy output
        id: parse
        run: |
          WARNINGS=$(grep -E 'warning:' clang-tidy.log | wc -l)
          ERRORS=$(grep -E 'error:' clang-tidy.log | wc -l)
          echo "WARNINGS=$WARNINGS" >> $GITHUB_ENV
          echo "ERRORS=$ERRORS" >> $GITHUB_ENV
          echo "::set-output name=warnings::$WARNINGS"
          echo "::set-output name=errors::$ERRORS"

      - name: Prepare Slack message
        id: slack_message
        run: |
          echo "SLACK_MESSAGE<<EOF" >> $GITHUB_ENV
          echo "🛠️ *Clang-Tidy Report* for \`${{ github.repository }}\`" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "*Warnings:* $WARNINGS" >> $GITHUB_ENV
          echo "*Errors:* $ERRORS" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "Commit: ${{ github.sha }}" >> $GITHUB_ENV
          echo "Author: ${{ github.actor }}" >> $GITHUB_ENV
          echo "Workflow: ${{ github.workflow }}" >> $GITHUB_ENV
          echo "Run: ${{ github.run_number }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "${{ env.SLACK_MESSAGE }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

